{"uid":"81444d74502b2812","name":"test_post_new_user_negative[empty-empty]","fullName":"tests.test_user#test_post_new_user_negative","historyId":"58db2062d9b6a36cacd4f03f05c7bb1b","time":{"start":1673160022842,"stop":1673160023013,"duration":171},"description":"Creates new user, verifies if the user is created","descriptionHtml":"<p>Creates new user, verifies if the user is created</p>\n","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: assert '6874987522' == ''\n  + 6874987522","statusTrace":"user_id = '', name = ''\nheaders = {'Content-Type': 'application/json', 'accept': 'application/json'}\n\n    @allure.epic(\"US_003.00.00 | User > Operations about user - negative\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize(\n        \"user_id\",\n        [\"\", \"blabla\", \"-6\", \"67 97 \", \"$%^\"],\n        ids=[\"empty\", \"string\", \"negative\", \"whitespace\", \"simbols\"],\n    )\n    @pytest.mark.parametrize(\n        \"name\",\n        [\"\", \"Анролрa\", \"-6\", \"67 97 \", \"$%^\", random_name(1000)],\n        ids=[\n            \"empty\",\n            \"russian_string\",\n            \"negative_integer\",\n            \"whitespace_integer\",\n            \"simbols\",\n            \"very_long_name\",\n        ],\n    )\n    def test_post_new_user_negative(user_id, name, headers):\n        \"\"\"Creates new user, verifies if the user is created\"\"\"\n        data = {\"id\": user_id, \"username\": name, \"message\": user_id}\n        status, result = user.post_new_user(data, headers)\n        assert status == 200\n>       assert result[\"message\"] == f\"{user_id}\"\nE       AssertionError: assert '6874987522' == ''\nE         + 6874987522\n\ntests/test_user.py:75: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"headers","time":{"start":1673160022841,"stop":1673160022841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Creates new user, verifies if the user is created","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: assert '6874987522' == ''\n  + 6874987522","statusTrace":"user_id = '', name = ''\nheaders = {'Content-Type': 'application/json', 'accept': 'application/json'}\n\n    @allure.epic(\"US_003.00.00 | User > Operations about user - negative\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize(\n        \"user_id\",\n        [\"\", \"blabla\", \"-6\", \"67 97 \", \"$%^\"],\n        ids=[\"empty\", \"string\", \"negative\", \"whitespace\", \"simbols\"],\n    )\n    @pytest.mark.parametrize(\n        \"name\",\n        [\"\", \"Анролрa\", \"-6\", \"67 97 \", \"$%^\", random_name(1000)],\n        ids=[\n            \"empty\",\n            \"russian_string\",\n            \"negative_integer\",\n            \"whitespace_integer\",\n            \"simbols\",\n            \"very_long_name\",\n        ],\n    )\n    def test_post_new_user_negative(user_id, name, headers):\n        \"\"\"Creates new user, verifies if the user is created\"\"\"\n        data = {\"id\": user_id, \"username\": name, \"message\": user_id}\n        status, result = user.post_new_user(data, headers)\n        assert status == 200\n>       assert result[\"message\"] == f\"{user_id}\"\nE       AssertionError: assert '6874987522' == ''\nE         + 6874987522\n\ntests/test_user.py:75: AssertionError","steps":[{"name":"POST request from url /v2/user","time":{"start":1673160023013,"stop":1673160023013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"327074c259198777","name":"log","source":"327074c259198777.txt","type":"text/plain","size":36}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"US_003.00.00 | User > Operations about user - negative"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user"},{"name":"host","value":"fv-az397-891"},{"name":"thread","value":"2732-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"name","value":"''"},{"name":"user_id","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":6,"passed":0,"unknown":0,"total":6},"items":[{"uid":"22d0e27a608efe1d","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/52//#testresult/22d0e27a608efe1d","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert '6874988379' == ''\n  + 6874988379","time":{"start":1672812864018,"stop":1672812864309,"duration":291}},{"uid":"b98adba9bb6ebd89","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/51//#testresult/b98adba9bb6ebd89","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert '6874990121' == ''\n  + 6874990121","time":{"start":1672393650348,"stop":1672393650511,"duration":163}},{"uid":"ca5bc4e6bde1585c","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/50//#testresult/ca5bc4e6bde1585c","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert '6874987405' == ''\n  + 6874987405","time":{"start":1672377273255,"stop":1672377273322,"duration":67}},{"uid":"21f96f58f271e451","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/49//#testresult/21f96f58f271e451","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert '9223372036854609968' == ''\n  + 9223372036854609968","time":{"start":1672220930651,"stop":1672220930669,"duration":18}},{"uid":"3ec47172ea154247","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/48//#testresult/3ec47172ea154247","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert '9223372036854592938' == ''\n  + 9223372036854592938","time":{"start":1672220400551,"stop":1672220400715,"duration":164}}]},"tags":["@pytest.mark.xfail"]},"source":"81444d74502b2812.json","parameterValues":["''","''"]}
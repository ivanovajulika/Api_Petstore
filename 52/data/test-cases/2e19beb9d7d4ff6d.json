{"uid":"2e19beb9d7d4ff6d","name":"test_post_new_user_negative[very_long_name-string]","fullName":"tests.test_user#test_post_new_user_negative","historyId":"3f1773431e5f31553700b271216903fd","time":{"start":1672812872053,"stop":1672812872345,"duration":292},"description":"Creates new user, verifies if the user is created","descriptionHtml":"<p>Creates new user, verifies if the user is created</p>\n","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: assert 500 == 200","statusTrace":"user_id = 'blabla'\nname = 'Hbmopbaehjhbazhqwyaqgxkjfngkownlzfelwsgnxrrbwgfjreuljkmutbmahyzpilhpcmlxosbhyhkkbpgmunfrxjddstfhbwwarrjrycmmkeutiximh...mldyvvrhbrtbdhtlikvjbajduhqwjbjttqdjddqtzwaroefgxtbjhmqpcgqqeealzppdukcvkwfdrgypcmsoaulwovupisjcoiflywvmhbvfantjcogmap'\nheaders = {'Content-Type': 'application/json', 'accept': 'application/json'}\n\n    @allure.epic(\"US_003.00.00 | User > Operations about user - negative\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize(\n        \"user_id\",\n        [\"\", \"blabla\", \"-6\", \"67 97 \", \"$%^\"],\n        ids=[\"empty\", \"string\", \"negative\", \"whitespace\", \"simbols\"],\n    )\n    @pytest.mark.parametrize(\n        \"name\",\n        [\"\", \"Анролрa\", \"-6\", \"67 97 \", \"$%^\", random_name(1000)],\n        ids=[\n            \"empty\",\n            \"russian_string\",\n            \"negative_integer\",\n            \"whitespace_integer\",\n            \"simbols\",\n            \"very_long_name\",\n        ],\n    )\n    def test_post_new_user_negative(user_id, name, headers):\n        \"\"\"Creates new user, verifies if the user is created\"\"\"\n        data = {\"id\": user_id, \"username\": name, \"message\": user_id}\n        status, result = user.post_new_user(data, headers)\n>       assert status == 200\nE       assert 500 == 200\n\ntests/test_user.py:74: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"headers","time":{"start":1672812872052,"stop":1672812872052,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Creates new user, verifies if the user is created","status":"skipped","statusMessage":"XFAIL\n\nAssertionError: assert 500 == 200","statusTrace":"user_id = 'blabla'\nname = 'Hbmopbaehjhbazhqwyaqgxkjfngkownlzfelwsgnxrrbwgfjreuljkmutbmahyzpilhpcmlxosbhyhkkbpgmunfrxjddstfhbwwarrjrycmmkeutiximh...mldyvvrhbrtbdhtlikvjbajduhqwjbjttqdjddqtzwaroefgxtbjhmqpcgqqeealzppdukcvkwfdrgypcmsoaulwovupisjcoiflywvmhbvfantjcogmap'\nheaders = {'Content-Type': 'application/json', 'accept': 'application/json'}\n\n    @allure.epic(\"US_003.00.00 | User > Operations about user - negative\")\n    @pytest.mark.xfail\n    @pytest.mark.parametrize(\n        \"user_id\",\n        [\"\", \"blabla\", \"-6\", \"67 97 \", \"$%^\"],\n        ids=[\"empty\", \"string\", \"negative\", \"whitespace\", \"simbols\"],\n    )\n    @pytest.mark.parametrize(\n        \"name\",\n        [\"\", \"Анролрa\", \"-6\", \"67 97 \", \"$%^\", random_name(1000)],\n        ids=[\n            \"empty\",\n            \"russian_string\",\n            \"negative_integer\",\n            \"whitespace_integer\",\n            \"simbols\",\n            \"very_long_name\",\n        ],\n    )\n    def test_post_new_user_negative(user_id, name, headers):\n        \"\"\"Creates new user, verifies if the user is created\"\"\"\n        data = {\"id\": user_id, \"username\": name, \"message\": user_id}\n        status, result = user.post_new_user(data, headers)\n>       assert status == 200\nE       assert 500 == 200\n\ntests/test_user.py:74: AssertionError","steps":[{"name":"POST request from url /v2/user","time":{"start":1672812872345,"stop":1672812872345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[{"uid":"6c911ab4c5593843","name":"log","source":"6c911ab4c5593843.txt","type":"text/plain","size":37}],"parameters":[],"stepsCount":1,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"US_003.00.00 | User > Operations about user - negative"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user"},{"name":"host","value":"fv-az204-743"},{"name":"thread","value":"2877-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"name","value":"'Hbmopbaehjhbazhqwyaqgxkjfngkownlzfelwsgnxrrbwgfjreuljkmutbmahyzpilhpcmlxosbhyhkkbpgmunfrxjddstfhbwwarrjrycmmkeutiximhvyonrlsfhptpdhiawsrgymlheqysnyfrvelnwrovairxinsruowooigqllbrbdpzyhpmuzqtoddwnckbubtozwjqjcusvxtdthgajyebxmgprbqmyhbhyhmkqsgsifblujzuifudvufhityhtuqnfhnnhfdqllfidhztabvjwetzxqbmrbxunnbducjdfmbufxavocidrtwidhlbmlhtxrqvdecdpycpwhpsfbiqqwgfwhhphelnzrzqudbxudvisktuiuhmtzbtznkvraaiqokqbbezrxmguddinpryvzozwqtopoxrhereflglsmipikubdsoltwsksypntpstjkigqvrmmdwrjnhrehhizbbozhdwaulnwhxcznoutmoxywilrahlcmffdpcfxltwvhkpjcqrulfjqjwtvkwprqyudicswdqnurkbjyjxwrtttmccqihpbxszcmxwglytvdrujfwkwtaydipwijvxfbrmmoiryxuwwhovlsrngzjbltmpcjkddzdfumrgpkofpkcelgertfwmorausjtgvhgvqmcpwygopgwhepiypyqaybwfedfgyqavxwonanbxgqpczqzcxgcwgklvcrkeumlstzzpahoodnqkmtnnucwhgkyypwkuomqmqpzolktaczesywqglnuwpehnbzwnvedjspvnelajemcuftjwhockcadxiixopokqgdbchkfdoyrlhuzusulwgvizgqeibrukgyxbqkyuaxparerwhmldyvvrhbrtbdhtlikvjbajduhqwjbjttqdjddqtzwaroefgxtbjhmqpcgqqeealzppdukcvkwfdrgypcmsoaulwovupisjcoiflywvmhbvfantjcogmap'"},{"name":"user_id","value":"'blabla'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":5,"passed":0,"unknown":0,"total":5},"items":[{"uid":"6117958f22519810","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/51//#testresult/6117958f22519810","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert 500 == 200","time":{"start":1672393654779,"stop":1672393654939,"duration":160}},{"uid":"1b091252bee56afb","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/50//#testresult/1b091252bee56afb","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert 500 == 200","time":{"start":1672377274597,"stop":1672377274639,"duration":42}},{"uid":"4fcf12637ef754ab","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/49//#testresult/4fcf12637ef754ab","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert 500 == 200","time":{"start":1672220931300,"stop":1672220931318,"duration":18}},{"uid":"f7c62f2ec4f79fde","reportUrl":"https://ivanovajulika.github.io/Api_Petstore/48//#testresult/f7c62f2ec4f79fde","status":"skipped","statusDetails":"XFAIL\n\nAssertionError: assert 500 == 200","time":{"start":1672220405200,"stop":1672220405359,"duration":159}}]},"tags":["@pytest.mark.xfail"]},"source":"2e19beb9d7d4ff6d.json","parameterValues":["'Hbmopbaehjhbazhqwyaqgxkjfngkownlzfelwsgnxrrbwgfjreuljkmutbmahyzpilhpcmlxosbhyhkkbpgmunfrxjddstfhbwwarrjrycmmkeutiximhvyonrlsfhptpdhiawsrgymlheqysnyfrvelnwrovairxinsruowooigqllbrbdpzyhpmuzqtoddwnckbubtozwjqjcusvxtdthgajyebxmgprbqmyhbhyhmkqsgsifblujzuifudvufhityhtuqnfhnnhfdqllfidhztabvjwetzxqbmrbxunnbducjdfmbufxavocidrtwidhlbmlhtxrqvdecdpycpwhpsfbiqqwgfwhhphelnzrzqudbxudvisktuiuhmtzbtznkvraaiqokqbbezrxmguddinpryvzozwqtopoxrhereflglsmipikubdsoltwsksypntpstjkigqvrmmdwrjnhrehhizbbozhdwaulnwhxcznoutmoxywilrahlcmffdpcfxltwvhkpjcqrulfjqjwtvkwprqyudicswdqnurkbjyjxwrtttmccqihpbxszcmxwglytvdrujfwkwtaydipwijvxfbrmmoiryxuwwhovlsrngzjbltmpcjkddzdfumrgpkofpkcelgertfwmorausjtgvhgvqmcpwygopgwhepiypyqaybwfedfgyqavxwonanbxgqpczqzcxgcwgklvcrkeumlstzzpahoodnqkmtnnucwhgkyypwkuomqmqpzolktaczesywqglnuwpehnbzwnvedjspvnelajemcuftjwhockcadxiixopokqgdbchkfdoyrlhuzusulwgvizgqeibrukgyxbqkyuaxparerwhmldyvvrhbrtbdhtlikvjbajduhqwjbjttqdjddqtzwaroefgxtbjhmqpcgqqeealzppdukcvkwfdrgypcmsoaulwovupisjcoiflywvmhbvfantjcogmap'","'blabla'"]}